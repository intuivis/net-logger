/**
 * This file is auto-generated by Supabase.
 * YOU SHOULD NOT MODIFY IT MANUALLY.
 *
 * It is RECOMMENDED that you keep this file as-is, since manually creating
 * a recursive `Json` type can lead to performance issues and compiler errors
 * with "excessively deep type instantiation".
 *
 * For the same reason, `json` and `jsonb` columns are typed as `any`.
 */

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      awarded_badges: {
        Row: {
          id: string;
          call_sign: string;
          badge_id: string;
          awarded_at: string;
          session_id: string;
          net_id: string;
        };
        Insert: {
          call_sign: string;
          badge_id: string;
          awarded_at?: string;
          session_id: string;
          net_id: string;
        };
        Update: {
          id?: string;
          call_sign?: string;
          badge_id?: string;
          session_id?: string;
          net_id?: string;
        };
        Relationships: [
          {
            foreignKeyName: "awarded_badges_net_id_fkey";
            columns: ["net_id"];
            referencedRelation: "nets";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "awarded_badges_session_id_fkey";
            columns: ["session_id"];
            referencedRelation: "sessions";
            referencedColumns: ["id"];
          }
        ];
      };
      badges: {
        Row: {
          id: string;
          name: string;
          description: string;
        };
        Insert: {
          id: string;
          name: string;
          description: string;
        };
        Update: {
          id?: string;
          name?: string;
          description?: string;
        };
        Relationships: [];
      };
      callsigns: {
        Row: {
          callsign: string;
          first_name: string | null;
          last_name: string | null;
          license_id: number;
        };
        Insert: {
          callsign: string;
          first_name?: string | null;
          last_name?: string | null;
          license_id: number;
        };
        Update: {
          callsign?: string;
          first_name?: string | null;
          last_name?: string | null;
          license_id?: number;
        };
        Relationships: [];
      };
      check_ins: {
        Row: {
          id: string;
          session_id: string;
          timestamp: string;
          call_sign: string;
          name: string | null;
          location: string | null;
          notes: string | null;
          repeater_id: string | null;
          status_flag: number;
        };
        Insert: {
          session_id: string;
          timestamp?: string;
          call_sign: string;
          name?: string | null;
          location?: string | null;
          notes?: string | null;
          repeater_id?: string | null;
          status_flag?: number;
        };
        Update: {
          id?: string;
          session_id?: string;
          call_sign?: string;
          name?: string | null;
          location?: string | null;
          notes?: string | null;
          repeater_id?: string | null;
          status_flag?: number;
        };
        Relationships: [
          {
            foreignKeyName: "check_ins_session_id_fkey";
            columns: ["session_id"];
            referencedRelation: "sessions";
            referencedColumns: ["id"];
          }
        ];
      };
      listening_stations: {
        Row: {
          id: string;
          created_at: string;
          session_id: string;
          call_sign: string;
          name: string | null;
          location: string | null;
          notes: string | null;
          profile_id: string | null;
        };
        Insert: {
          session_id: string;
          call_sign: string;
          name?: string | null;
          location?: string | null;
          notes?: string | null;
          profile_id?: string | null;
        };
        Update: {
          session_id?: string;
          call_sign?: string;
          name?: string | null;
          location?: string | null;
          notes?: string | null;
          profile_id?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "listening_stations_session_id_fkey";
            columns: ["session_id"];
            referencedRelation: "sessions";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "listening_stations_profile_id_fkey";
            columns: ["profile_id"];
            referencedRelation: "profiles";
            referencedColumns: ["id"];
          }
        ];
      };
      nets: {
        Row: {
          id: string;
          created_at: string;
          created_by: string;
          name: string;
          description: string | null;
          website_url: string | null;
          primary_nco: string;
          primary_nco_callsign: string;
          net_type: string;
          schedule: string;
          time: string;
          time_zone: string;
          repeaters: Json;
          net_config_type: string;
          frequency: string | null;
          band: string | null;
          mode: string | null;
          passcode: string | null;
          passcode_permissions: Json | null;
        };
        Insert: {
          created_by: string;
          name: string;
          description?: string | null;
          website_url?: string | null;
          primary_nco: string;
          primary_nco_callsign: string;
          net_type: string;
          schedule: string;
          time: string;
          time_zone: string;
          repeaters: Json;
          net_config_type: string;
          frequency?: string | null;
          band?: string | null;
          mode?: string | null;
          passcode?: string | null;
          passcode_permissions?: Json | null;
        };
        Update: {
          id?: string;
          name?: string;
          description?: string | null;
          website_url?: string | null;
          primary_nco?: string;
          primary_nco_callsign?: string;
          net_type?: string;
          schedule?: string;
          time?: string;
          time_zone?: string;
          repeaters?: Json;
          net_config_type?: string;
          frequency?: string | null;
          band?: string | null;
          mode?: string | null;
          passcode?: string | null;
          passcode_permissions?: Json | null;
        };
        Relationships: [];
      };
      profiles: {
        Row: {
          id: string;
          email: string | null;
          full_name: string | null;
          call_sign: string | null;
          location: string | null;
          role: "admin" | "nco";
          is_approved: boolean;
        };
        Insert: {
          id?: string;
          email?: string | null;
          full_name?: string | null;
          call_sign?: string | null;
          location?: string | null;
          role?: "admin" | "nco";
          is_approved?: boolean;
        };
        Update: {
          id?: string;
          email?: string | null;
          full_name?: string | null;
          call_sign?: string | null;
          location?: string | null;
          role?: "admin" | "nco";
          is_approved?: boolean;
        };
        Relationships: [];
      };
      roster_members: {
        Row: {
          id: string;
          net_id: string;
          call_sign: string;
          name: string | null;
          location: string | null;
          created_at: string;
        };
        Insert: {
          net_id: string;
          call_sign: string;
          name?: string | null;
          location?: string | null;
        };
        Update: {
          id?: string;
          net_id?: string;
          call_sign?: string;
          name?: string | null;
          location?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "roster_members_net_id_fkey";
            columns: ["net_id"];
            referencedRelation: "nets";
            referencedColumns: ["id"]
          }
        ];
      };
      sessions: {
        Row: {
          id: string;
          created_at: string;
          net_id: string;
          start_time: string;
          end_time: string | null;
          primary_nco: string;
          primary_nco_callsign: string;
          notes: string | null;
        };
        Insert: {
          net_id: string;
          start_time?: string;
          end_time?: string | null;
          primary_nco: string;
          primary_nco_callsign: string;
          notes?: string | null;
        };
        Update: {
          id?: string;
          net_id?: string;
          end_time?: string | null;
          primary_nco?: string;
          primary_nco_callsign?: string;
          notes?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "sessions_net_id_fkey";
            columns: ["net_id"];
            referencedRelation: "nets";
            referencedColumns: ["id"]
          }
        ];
      };
    };
    Views: {};
    Functions: {
      create_check_in: {
        Args: {
          p_session_id: string;
          p_call_sign: string;
          p_name: string | null;
          p_location: string | null;
          p_notes: string | null;
          p_repeater_id: string | null;
          p_passcode: string | null;
        };
        Returns: undefined;
      };
      delete_check_in: {
        Args: {
          p_check_in_id: string;
          p_passcode: string | null;
        };
        Returns: undefined;
      };
      end_session: {
        Args: {
          p_session_id: string;
          p_passcode: string | null;
        };
        Returns: Json;
      };
      start_session: {
        Args: {
          p_net_id: string;
          p_primary_nco: string;
          p_primary_nco_callsign: string;
          p_passcode: string | null;
        };
        Returns: Json;
      };
      update_check_in: {
        Args: {
          p_check_in_id: string;
          p_call_sign: string;
          p_name: string | null;
          p_location: string | null;
          p_notes: string | null;
          p_repeater_id: string | null;
          p_passcode: string | null;
        };
        Returns: undefined;
      };
      update_check_in_status_flag: {
        Args: {
          p_check_in_id: string;
          p_status_flag: number;
          p_passcode: string | null;
        };
        Returns: undefined;
      };
      update_net_details: {
        Args: {
          p_net_id: string;
          p_name: string;
          p_description: string | null;
          p_website_url: string | null;
          p_primary_nco: string;
          p_primary_nco_callsign: string;
          p_net_type: string;
          p_schedule: string;
          p_time: string;
          p_time_zone: string;
          p_net_config_type: string;
          p_repeaters: Json;
          p_frequency: string | null;
          p_band: string | null;
          p_mode: string | null;
          p_passcode_val: string | null;
          p_passcode_permissions: Json | null;
          p_passcode: string | null;
        };
        Returns: Json;
      };
      update_profile_with_callsign_check: {
        Args: {
          p_user_id: string;
          p_full_name: string;
          p_call_sign: string;
          p_location: string;
        };
        Returns: Json;
      };
      verify_passcode: {
        Args: {
          p_net_id: string;
          p_passcode_attempt: string;
        };
        Returns: Json;
      };
    };
    Enums: {};
    CompositeTypes: {};
  };
}